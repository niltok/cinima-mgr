// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cinima_mgr.Data;

#nullable disable

namespace cinima_mgr.Migrations
{
    [DbContext(typeof(MgrContext))]
    [Migration("20220920010720_Discount")]
    partial class Discount
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("cinima_mgr.Data.Comment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<double>("Content")
                        .HasColumnType("REAL");

                    b.Property<string>("MovieId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Rate")
                        .HasColumnType("REAL");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("UserName");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("cinima_mgr.Data.DiscountTicket", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Rate")
                        .HasColumnType("REAL");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserName");

                    b.ToTable("DiscountTickets");
                });

            modelBuilder.Entity("cinima_mgr.Data.Movie", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("cinima_mgr.Data.SessionState", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserName");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("cinima_mgr.Data.Ticket", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserName");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("cinima_mgr.Data.User", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("HeadPic")
                        .HasColumnType("BLOB");

                    b.Property<bool>("IsMgr")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("VIPExpireTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("cinima_mgr.Data.Comment", b =>
                {
                    b.HasOne("cinima_mgr.Data.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("cinima_mgr.Data.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("User");
                });

            modelBuilder.Entity("cinima_mgr.Data.DiscountTicket", b =>
                {
                    b.HasOne("cinima_mgr.Data.User", "User")
                        .WithMany("Discounts")
                        .HasForeignKey("UserName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("cinima_mgr.Data.SessionState", b =>
                {
                    b.HasOne("cinima_mgr.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("cinima_mgr.Data.Ticket", b =>
                {
                    b.HasOne("cinima_mgr.Data.User", null)
                        .WithMany("Tickets")
                        .HasForeignKey("UserName");
                });

            modelBuilder.Entity("cinima_mgr.Data.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Discounts");

                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
