@page "/"
@inject NavigationManager NavigationManager
@inject EventMgr EventMgr
@inject StateCache StateCache
@implements IAsyncDisposable

<PageTitle>喵票票</PageTitle>

@* <h1 style="margin: 3rem;">欢迎来到喵票票</h1> *@

<div class="container-form">
    <input type="text" placeholder="输入关键词搜索电影" value="@_filter" 
           class="form-control"
           @oninput="e => FilterChanged((string)e.Value!)"/>
    @if (StateCache.User is not null && StateCache.User.IsMgr)
    {
        <p>总票房: @_sumBox.ToString("N2")</p>
    }
</div>

<div class="container-index">
    @if (_movies.Count == 0)
    {
        <h1 class="container-center">找不到电影...</h1>
    }
    @foreach (var m in _movies)
    {
        <div class="item">
            <p>
                <NavLink href=@($"/Movie/Info/{m.Id}")>
                    <img class="movie_cover" tabindex="0"
                         src=@($"/Movie/Cover/{m.Id}")
                         alt=@($"Cover of {m.Name}")/>
                </NavLink>
            </p>
            <div>
                <h3>
                    <b>@m.Name</b>
                    <small class="text-secondary px-1">(@(m.ReleaseDate.ToString("yyyy-M")))</small>
                </h3>
                <div class="text-secondary">
                    @if (m.Duration == TimeSpan.Zero)
                    {
                        <span>时长未知</span>
                    }
                    else
                    {
                        <span>@m.Duration.TotalMinutes 分钟</span>
                    }
                    <span class="px-2">@m.Type</span>
                </div>
                @if (StateCache.User is not null && StateCache.User.IsMgr)
                {
                    <div>票房: @((m.BoxOffice / 100.0).ToString("N2"))</div>
                }
                @* <p>@m.Introduction</p> *@
                <p></p>
                <p style="display: inline-flex; justify-content: center; width: 100%">
                    @if (m.Status == 1)
                    {
                        <button class="btn-primary btn" @onclick="() => ToShowInfo(m.Id)">
                            @(m.ReleaseDate > DateTime.Now ? "预定" : "购票")
                        </button>
                    }
                    else
                    {
                        <button class="btn btn-outline-dark">不在映</button>
                    }
                </p>
            </div>
        </div>
    }
</div>

@code
{
    MgrContext _db = new();
    static async Task PE()
    {
    }

    string _filter = "";
    List<Movie> _movies = new();

    double _sumBox;

    async Task Load()
    {
        var keys = _filter.Split(' ').Where(s => s != "").ToList();
        _db.ChangeTracker.Clear();
        _movies = (await _db
            .Movies
            .DisplayMovie()
            .ToListAsync())
            .Where(m => keys.Count == 0 || keys.Any(key => FindMovie(m, key)))
            .OrderByDescending(m => keys.All(key => FindMovie(m, key)))
            .ToList();
        _sumBox = _movies.Sum(m => m.BoxOffice) / 100.0;
    }

    private static bool FindMovie(Movie m, string key)
    {
        return m.Name.Contains(key) || 
               m.Type.Contains(key) || 
               m.ReleaseDate.Year.ToString() == key;
    }

    void FilterChanged(string s)
    {
        _filter = s;
        Load();
    }
    
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Load();
    }

    async Task ToShowInfo(string st)
    {
        NavigationManager.NavigateTo($"/ShowInfo/{st}");
    }

    public async ValueTask DisposeAsync()
    {
        await _db.DisposeAsync();
    }
}
