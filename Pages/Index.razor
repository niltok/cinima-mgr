@page "/"
@inject NavigationManager NavigationManager
@inject EventMgr EventMgr

<PageTitle>主页</PageTitle>


<h1 style="margin-bottom: 20px; margin-top: 20px">欢迎来到喵票票</h1>

<div class="container-index">
    @foreach (var m in _movies)
    {
        <div class="item">
            <p>
                <img class="movie_cover" 
                     src=@($"/Movie/Cover/{m.Id}") 
                     alt=@($"Cover of {m.Name}") @onclick="() => Pop(m.Id)"/>
            </p>
            <div>
                <h3><NavLink href=@($"/Movie/Info/{m.Id}")>@m.Name</NavLink></h3>
                <h6>@m.Type</h6>
                <p>时长：@m.Duration.TotalMinutes 分钟</p>
                <p>上映时间：@m.ReleaseDate.ToString("yyyy-M-d")</p>
                @* <p>@m.Introduction</p> *@
                <p style="display: inline-flex; justify-content: center; width: 100%"><button class="btn-primary btn" @onclick="() => ToShowInfo(m.Id)">
                    @(m.ReleaseDate > DateTime.Now ? "预定" : "购票")
                </button></p>
            </div>
        </div>
    }
</div>

<Popout @bind-Enable="_showPopout">
    <p><button class="btn btn-close px-3" @onclick="() => _showPopout = false"/></p>
    <MovieInfo Id="_popId"/>
</Popout>

@code
{
    bool _showPopout;
    Guid _popId;

    void Pop(string id)
    {
        _popId = Guid.Parse(id);
        _showPopout = true;
    }
    static async Task PE()
    {
        Console.WriteLine("test");
        await Global.App.Services.GetService<EventMgr>()!
            .Subscribe(DateTime.Now + TimeSpan.FromSeconds(5), () => PE());
    }
    List<Movie> _movies = new();
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await using var db = new MgrContext();
        _movies = await db.Movies.ToListAsync();
    }

    async Task ToShowInfo(string st)
    {
        NavigationManager.NavigateTo($"/ShowInfo/{st}");
    }
}
