@page "/MyOrders"
@using cinima_mgr.Data
@using cinima_mgr.Service
@using Microsoft.EntityFrameworkCore
@inject StateCache StateCache
@inject NavigationManager NavigationManager
@using Blazorise
@using System.Text

<AuthUser/>

<PageTitle> 订单 </PageTitle>

<div class="container-form">
    @foreach (var i in _ordersalrpay)
    {
        @* <div class="container-form" style="height: 600px; margin-bottom: 3px; border-bottom-width: 3px; border-color: #0d6efd"> *@
            <LayoutHeader>
                <h6><small> 订单号:@i.Id </small></h6>
            </LayoutHeader>
            <Layout Sider Style="height: 410px; background: #e9ecef; border-radius: 10px; margin-left: 5px">
                <div class="item-container">
                    <LayoutSider Style="height: 410px; background: transparent; margin-left: 20px; z-index: 0">
                        <LayoutSiderContent>
                            <p>
                                <img class="movie-cover" src=@($"/Movie/Cover/{i.Tickets.First().Show.Movie.Id}")/>
                            </p>
                            <h4>
                                <b>@i.Tickets.First().Show.Movie.Name</b><br/>
                                <small class="text-secondary">
                                    (@i.Tickets.First().Show.Movie.ReleaseDate.ToString("yyyy-MM"))
                                </small>
                            </h4>
                            <h5>@i.Tickets.First().Show.Room.Name</h5>
                            <h6>
                                <small class="text-secondary">
                                    @i.Tickets.First().Show.Time.ToString("yyyy-MM-dd")<br/>
                                    @i.Tickets.First().Show.Time.ToString("HH:mm") ~
                                    @((i.Tickets.First().Show.Time + i.Tickets.First().Show.Movie.Duration).ToString("HH:mm"))
                                </small>
                            </h6>
                        </LayoutSiderContent>
                    </LayoutSider>
                    <LayoutContent>
                        <div class="info-item">
                            <p> Content </p>
                        </div>
                    </LayoutContent>
                </div>
            </Layout>
            // </div>
        <span class="px-1"></span>
    }
</div>

@code {
    MgrContext db = new();
    List<Order> _ordersnotpay = new List<Order>();
    List<Order> _ordersalrpay = new List<Order>();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        if (StateCache.User is null)
        {
            NavigationManager.NavigateTo(
                $"/Login/{Convert.ToBase64String(Encoding.Default.GetBytes(NavigationManager.Uri))}");
            return;
        }
        _ordersnotpay = await db.Orders.Where(t => t.UserName == StateCache.User.Name && t.State != '4')
            .Include(t => t.Tickets).ToListAsync();
        await Task.WhenAll(_ordersnotpay.Select(t => db
            .Entry(t.Tickets.First())
            .Reference(s => s.Show)
            .LoadAsync()));
        await Task.WhenAll(_ordersnotpay.Select(t => db
            .Entry(t.Tickets.First().Show)
            .Reference(s => s.Movie)
            .LoadAsync()));
        await Task.WhenAll(_ordersnotpay.Select(t => db
            .Entry(t.Tickets.First().Show)
            .Reference(s => s.Room)
            .LoadAsync()));
        _ordersalrpay = _ordersnotpay.Where(t => t.State != '0').OrderByDescending(t => t.CreateTime).ToList();
        _ordersnotpay = _ordersnotpay.Where(t => t.State == '0').OrderByDescending(t => t.CreateTime).ToList();
    }

    public async ValueTask DisposeAsync()
    {
        await db.DisposeAsync();
    }
    
}